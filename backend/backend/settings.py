# """
# Django settings for backend project.

# Generated by 'django-admin startproject' using Django 5.2.1.

# For more information on this file, see
# https://docs.djangoproject.com/en/5.2/topics/settings/

# For the full list of settings and their values, see
# https://docs.djangoproject.com/en/5.2/ref/settings/
# """
# from pathlib import Path
# import os
# from dotenv import load_dotenv

# from pathlib import Path

# # Build paths inside the project like this: BASE_DIR / 'subdir'.
# BASE_DIR = Path(__file__).resolve().parent.parent
# load_dotenv(BASE_DIR / ".env")  # ✅ Load environment variables from .env

# # Quick-start development settings - unsuitable for production
# # See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# # SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = "django-insecure-1m%=wp)d@a20o-$9(eg%@z^%o&!6oq+xth5_a)s5f+e5oq4-)2"

# # SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = True

# ALLOWED_HOSTS = []


# # Application definition

# INSTALLED_APPS = [
#     "django.contrib.admin",
#     "django.contrib.auth",
#     "django.contrib.contenttypes",
#     "django.contrib.sessions",
#     "django.contrib.sites",
#     "django.contrib.messages",
#     "django.contrib.staticfiles",

#     # Auth + REST
#     "rest_framework",
#     "rest_framework.authtoken",
#     "dj_rest_auth",
#     "dj_rest_auth.registration",
#     "allauth",
#     "allauth.account",
#     "allauth.socialaccount",
#     "allauth.socialaccount.providers.google",
#     "allauth.socialaccount.providers.github",
#     # 'rest_framework',
#     'fairness',
#     "corsheaders",
#     'users',
#     "accounts",
#     # "new",
# ]

# MIDDLEWARE = [
#     "corsheaders.middleware.CorsMiddleware",
#     "django.middleware.common.CommonMiddleware",
#     "django.middleware.security.SecurityMiddleware",
#     "django.contrib.sessions.middleware.SessionMiddleware",
#     # "django.middleware.common.CommonMiddleware",
#     "django.middleware.csrf.CsrfViewMiddleware",
#     "django.contrib.auth.middleware.AuthenticationMiddleware",
#     "django.contrib.messages.middleware.MessageMiddleware",
#     "django.middleware.clickjacking.XFrameOptionsMiddleware",
#     "allauth.account.middleware.AccountMiddleware",
# ]

# ROOT_URLCONF = "backend.urls"

# TEMPLATES = [
#     {
#         "BACKEND": "django.template.backends.django.DjangoTemplates",
#         "DIRS": [],
#         "APP_DIRS": True,
#         "OPTIONS": {
#             "context_processors": [
#                 "django.template.context_processors.request",
#                 "django.contrib.auth.context_processors.auth",
#                 "django.contrib.messages.context_processors.messages",
#             ],
#         },
#     },
# ]

# WSGI_APPLICATION = "backend.wsgi.application"


# # Database
# # https://docs.djangoproject.com/en/5.2/ref/settings/#databases

# # DATABASES = {
# #     "default": {
# #         "ENGINE": "django.db.backends.sqlite3",
# #         "NAME": BASE_DIR / "db.sqlite3",
# #     }
# # }
# # DATABASES = {
# #     'default': {
# #         'ENGINE': 'djongo',
# #         'NAME': 'FairPlayAI',
# #         'ENFORCE_SCHEMA': False,  # Optional: for flexible schemas
# #         'CLIENT': {
# #             # 'host': 'mongodb://127.0.0.1:27017',  # or use Atlas URI
# #             'host': 'mongodb://kasak:Project@123@127.0.0.1:27017/FairPlayAI?authSource=admin',

# #             # 'username': 'kasak',  # leave blank if not set
# #             # 'password': 'Project@123',  # leave blank if not set
# #             # 'authSource': 'admin',
# #         }
# #     }
# # }
# # old version
# # DATABASES = {
# #     'default': {
# #         'ENGINE': 'djongo',
# #         'NAME': 'FairPlayAI',
# #         'ENFORCE_SCHEMA': False,
# #         'CLIENT': {
# #             'host': 'mongodb://kasak:Project%40123@127.0.0.1:27017/FairPlayAI?authSource=admin',
# #         }
# #     }
# # }
# DATABASES = {
#     "default": {
#         "ENGINE": "django.db.backends.sqlite3",
#         "NAME": BASE_DIR / "db.sqlite3",
#     }
# }

# # MONGO_DB = {
# #     'HOST': 'mongodb://localhost:27017',
# #     'NAME': 'FairPlayAI'
# # }
# # MONGO_URI = "mongodb://kasak:Project%40123@127.0.0.1:27017/FairPlayAI?authSource=admin"
# MONGO_DB = {
#     'URI': 'mongodb://127.0.0.1:27017/FairPlayAI',

#     'NAME': 'FairPlayAI'
# }

# # MONGO_DB = {
# #     "URI": MONGO_URI,
# #     "NAME": "FairPlayAI"
# # }

# # OAuth Settings
# SOCIALACCOUNT_PROVIDERS = {
#     "google": {
#         "APP": {
#             "client_id": os.environ.get("GOOGLE_CLIENT_ID"),
#             "secret": os.environ.get("GOOGLE_CLIENT_SECRET"),
#             "key": ""
#         },
#         "SCOPE": ["profile", "email"],
#         "AUTH_PARAMS": {"access_type": "online"},
#     },
#     "github": {
#         "APP": {
#             "client_id": os.environ.get("GITHUB_CLIENT_ID"),
#             "secret": os.environ.get("GITHUB_CLIENT_SECRET"),
#             "key": ""
#         },
#         "SCOPE": ["user", "email"],
#     },
# }
# SITE_ID = 1

# AUTHENTICATION_BACKENDS = [
#     "django.contrib.auth.backends.ModelBackend",
#     "allauth.account.auth_backends.AuthenticationBackend",
# ]

# ACCOUNT_EMAIL_VERIFICATION = "none"
# ACCOUNT_LOGIN_METHOD = "username"
# ACCOUNT_SIGNUP_FIELDS = ["email", "username", "password1", "password2"]
# REST_FRAMEWORK = {
#     'DEFAULT_AUTHENTICATION_CLASSES': [
#         'rest_framework.authentication.SessionAuthentication',
#         'rest_framework.authentication.TokenAuthentication',
#     ],
# }
# LANGUAGE_CODE = "en-us"
# TIME_ZONE = "UTC"
# USE_I18N = True
# USE_TZ = True

# STATIC_URL = "static/"
# DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
# CORS_ALLOW_ALL_ORIGINS = False

# # ✅ Email Configuration using .env
# EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
# EMAIL_HOST = "smtp.gmail.com"
# EMAIL_PORT = 587
# EMAIL_USE_TLS = True
# EMAIL_HOST_USER = os.environ.get("EMAIL_HOST_USER")
# EMAIL_HOST_PASSWORD = os.environ.get("EMAIL_HOST_PASSWORD")
# DEFAULT_FROM_EMAIL = os.environ.get("DEFAULT_FROM_EMAIL", EMAIL_HOST_USER)

# CORS_ALLOW_ALL_ORIGINS = False  # or True if you're just testing

# CORS_ALLOWED_ORIGINS = [
#     "http://localhost:5173",
#     "http://127.0.0.1:5173",
# ]


# # Password validation
# # https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

# AUTH_PASSWORD_VALIDATORS = [
#     {
#         "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
#     },
#     {
#         "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
#     },
#     {
#         "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
#     },
#     {
#         "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
#     },
# ]


# # Internationalization
# # https://docs.djangoproject.com/en/5.2/topics/i18n/

# LANGUAGE_CODE = "en-us"

# TIME_ZONE = "UTC"

# USE_I18N = True

# USE_TZ = True


# # Static files (CSS, JavaScript, Images)
# # https://docs.djangoproject.com/en/5.2/howto/static-files/

# STATIC_URL = "static/"

# # Default primary key field type
# # https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

# DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# # CORS_ALLOWED_ORIGINS = [
# #     "http://localhost:5173",
# #     "http://localhost:5174",        # ✅ add this
# #     "http://127.0.0.1:5174", 
# # ]

# CORS_ALLOW_CREDENTIALS = True
"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
from pathlib import Path
import os
from dotenv import load_dotenv

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
load_dotenv(BASE_DIR / ".env")  # ✅ Load environment variables from .env

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-1m%=wp)d@a20o-$9(eg%@z^%o&!6oq+xth5_a)s5f+e5oq4-)2"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.sites",
    "django.contrib.messages",
    "django.contrib.staticfiles",

    # Auth + REST
    "rest_framework",
    "rest_framework.authtoken",
    "dj_rest_auth",
    "dj_rest_auth.registration",
    "allauth",
    "allauth.account",
    "allauth.socialaccount",
    "allauth.socialaccount.providers.google",
    "allauth.socialaccount.providers.github",
    "rest_framework_simplejwt",
    # 'rest_framework',
    'fairness',
    "corsheaders",
    'users',
    "accounts",
    "datasets",
    # "new",
]

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "allauth.account.middleware.AccountMiddleware",
]

ROOT_URLCONF = "backend.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "backend.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

# DATABASES = {
#     "default": {
#         "ENGINE": "django.db.backends.sqlite3",
#         "NAME": BASE_DIR / "db.sqlite3",
#     }
# }
# DATABASES = {
#     'default': {
#         'ENGINE': 'djongo',
#         'NAME': 'FairPlayAI',
#         'ENFORCE_SCHEMA': False,  # Optional: for flexible schemas
#         'CLIENT': {
#             # 'host': 'mongodb://127.0.0.1:27017',  # or use Atlas URI
#             'host': 'mongodb://kasak:Project@123@127.0.0.1:27017/FairPlayAI?authSource=admin',

#             # 'username': 'kasak',  # leave blank if not set
#             # 'password': 'Project@123',  # leave blank if not set
#             # 'authSource': 'admin',
#         }
#     }
# }
# old version
# DATABASES = {
#     'default': {
#         'ENGINE': 'djongo',
#         'NAME': 'FairPlayAI',
#         'ENFORCE_SCHEMA': False,
#         'CLIENT': {
#             'host': 'mongodb://kasak:Project%40123@127.0.0.1:27017/FairPlayAI?authSource=admin',
#         }
#     }
# }
DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}

# MONGO_DB = {
#     'HOST': 'mongodb://localhost:27017',
#     'NAME': 'FairPlayAI'
# }
# MONGO_URI = "mongodb://kasak:Project%40123@127.0.0.1:27017/FairPlayAI?authSource=admin"
MONGO_DB = {
    'URI': 'mongodb://127.0.0.1:27017/FairPlayAI',

    'NAME': 'FairPlayAI'
}

# MONGO_DB = {
#     "URI": MONGO_URI,
#     "NAME": "FairPlayAI"
# }

# OAuth Settings
SOCIALACCOUNT_PROVIDERS = {
    "google": {
        "APP": {
            "client_id": os.environ.get("GOOGLE_CLIENT_ID"),
            "secret": os.environ.get("GOOGLE_CLIENT_SECRET"),
            "key": ""
        },
        "SCOPE": ["profile", "email"],
        "AUTH_PARAMS": {"access_type": "online"},
    },
    "github": {
        "APP": {
            "client_id": os.environ.get("GITHUB_CLIENT_ID"),
            "secret": os.environ.get("GITHUB_CLIENT_SECRET"),
            "key": ""
        },
        "SCOPE": ["user", "email"],
    },
}
SITE_ID = 1

AUTHENTICATION_BACKENDS = [
    "django.contrib.auth.backends.ModelBackend",
    "allauth.account.auth_backends.AuthenticationBackend",
]

ACCOUNT_EMAIL_VERIFICATION = "none"
ACCOUNT_LOGIN_METHOD = "username"
ACCOUNT_SIGNUP_FIELDS = ["email", "username", "password1", "password2"]
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.TokenAuthentication',
    ],
}
# Add this entire SIMPLE_JWT block
SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=5),  # Token validity for access
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),   # Token validity for refresh
    'ROTATE_REFRESH_TOKENS': False,
    'BLACKLIST_AFTER_ROTATION': False,
    'UPDATE_LAST_LOGIN': False,

    'ALGORITHM': 'HS256',
    'SIGNING_KEY': SECRET_KEY, # Uses your project's SECRET_KEY for signing
    'VERIFYING_KEY': None,
    'AUDIENCE': None,
    'ISSUER': None,
    'JWK_URL': None,
    'LEEWAY': 0,

    'AUTH_HEADER_TYPES': ('Bearer',), # Crucial: tells Simple JWT to look for 'Bearer' prefix
    'AUTH_HEADER_NAME': 'HTTP_AUTHORIZATION',
    'USER_ID_FIELD': 'id', # Standard user ID field
    'USER_ID_CLAIM': 'user_id', # This should match the claim name in your JWT payload
    'USER_AUTHENTICATION_RULE': 'rest_framework_simplejwt.authentication.default_user_authentication_rule',

    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
    'TOKEN_TYPE_CLAIM': 'token_type',
    'TOKEN_USER_CLASS': 'rest_framework_simplejwt.models.TokenUser',

    'JTI_CLAIM': 'jti',

    'SLIDING_TOKEN_LIFETIME': timedelta(minutes=5),
    'SLIDING_TOKEN_REFRESH_LIFETIME': timedelta(days=1),
}

LANGUAGE_CODE = "en-us"
TIME_ZONE = "UTC"
USE_I18N = True
USE_TZ = True

STATIC_URL = "static/"
DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
CORS_ALLOW_ALL_ORIGINS = True

# ✅ Email Configuration using .env
EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = "smtp.gmail.com"
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = os.environ.get("EMAIL_HOST_USER")
EMAIL_HOST_PASSWORD = os.environ.get("EMAIL_HOST_PASSWORD")
DEFAULT_FROM_EMAIL = os.environ.get("DEFAULT_FROM_EMAIL", EMAIL_HOST_USER)

CORS_ALLOW_ALL_ORIGINS = False  # or True if you're just testing

CORS_ALLOWED_ORIGINS = [
    "http://localhost:5173",
    "http://127.0.0.1:5173",
]


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# CORS_ALLOWED_ORIGINS = [
#     "http://localhost:5173",
#     "http://localhost:5174",        # ✅ add this
#     "http://127.0.0.1:5174", 
# ]

CORS_ALLOW_CREDENTIALS = True